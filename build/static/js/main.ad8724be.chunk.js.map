{"version":3,"sources":["services/personService.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","newPerson","put","delete","Filter","filter","handleFilterChange","value","onChange","PersonForm","handleSave","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Persons","persons","handleDelete","filteredList","person","name","toUpperCase","includes","map","key","number","onClick","Notification","message","App","useState","setPersons","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","handleFetchPersons","personService","then","response","data","useEffect","numbersContent","window","confirm","setTimeout","catch","e","target","preventDefault","existing","returnedPerson","length","alert","res","concat","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.ad8724be.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'https://shielded-bastion-45608.herokuapp.com/persons'\r\n\r\nconst getAll = () => {\r\n\treturn axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n\treturn axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n\treturn axios.put(`${baseUrl}/${id}`, newPerson)\r\n}\r\n\r\nconst remove = id => {\r\n\treturn axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default {\r\n\tgetAll: getAll,\r\n\tcreate: create,\r\n\tupdate: update,\r\n\tremove: remove,\r\n}\r\n","import React from 'react'\r\n\r\nconst Filter = ({ filter, handleFilterChange }) => {\r\n\treturn (\r\n\t\t<p>\r\n\t\t\tFilter shown with <input value={filter} onChange={handleFilterChange} />\r\n\t\t</p>\r\n\t)\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst PersonForm = ({\r\n\thandleSave,\r\n\tnewName,\r\n\tnewNumber,\r\n\thandleNameChange,\r\n\thandleNumberChange,\r\n}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form onSubmit={handleSave}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tname: <input value={newName} onChange={handleNameChange} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tnumber: <input value={newNumber} onChange={handleNumberChange} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type=\"submit\">add</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Persons = ({ persons, filter, handleDelete }) => {\r\n\tconst handleFilter = person =>\r\n\t\tperson.name.toUpperCase().includes(filter.toUpperCase())\r\n\r\n\tconst filteredList = (\r\n\t\t<ul>\r\n\t\t\t{persons.filter(handleFilter).map(person => (\r\n\t\t\t\t<li key={person.name}>\r\n\t\t\t\t\t{person.name} {person.number}\r\n\t\t\t\t\t<button onClick={() => handleDelete(person.id, person.name)}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t)\r\n\r\n\treturn <div>{filteredList}</div>\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>{message}</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport personService from './services/personService'\r\n\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n\tconst [persons, setPersons] = useState([])\r\n\tconst [newName, setNewName] = useState('')\r\n\tconst [newNumber, setNewNumber] = useState('')\r\n\tconst [filter, setFilter] = useState('')\r\n\tconst [errorMessage, setErrorMessage] = useState('')\r\n\r\n\tconst handleFetchPersons = () => {\r\n\t\tpersonService.getAll().then(response => {\r\n\t\t\tsetPersons(response.data)\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\thandleFetchPersons()\r\n\t}, [])\r\n\r\n\tconst handleFilterChange = e => {\r\n\t\tsetFilter(e.target.value)\r\n\t}\r\n\r\n\tconst handleSave = e => {\r\n\t\te.preventDefault()\r\n\r\n\t\tconst existing = persons.filter(person => person.name === newName)\r\n\r\n\t\tconst newObject = {\r\n\t\t\tname: newName,\r\n\t\t\tnumber: newNumber,\r\n\t\t}\r\n\r\n\t\tif (existing) {\r\n\t\t\tif (\r\n\t\t\t\twindow.confirm(\r\n\t\t\t\t\t`${existing[0].name} is already added to the phonebook, would you like to update their contact number?`\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tpersonService\r\n\t\t\t\t\t.update(existing[0].id, newObject)\r\n\t\t\t\t\t.then(returnedPerson => {\r\n\t\t\t\t\t\tsetPersons(\r\n\t\t\t\t\t\t\tpersons.map(person =>\r\n\t\t\t\t\t\t\t\tperson.id !== returnedPerson.id ? person : returnedPerson\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tsetErrorMessage(`${newName}'s number was edited`)\r\n\t\t\t\t\t\tsetNewName('')\r\n\t\t\t\t\t\tsetNewNumber('')\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetErrorMessage(null)\r\n\t\t\t\t\t\t}, 5000)\r\n\t\t\t\t\t\thandleFetchPersons()\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(() => {\r\n\t\t\t\t\t\tsetPersons(persons.filter(person => person.id !== existing[0].id))\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t} else if (persons.filter(person => person.name === newName).length > 0) {\r\n\t\t\talert(`${newName} is already added to phonebook`)\r\n\t\t\tsetNewName('')\r\n\t\t\tsetNewNumber('')\r\n\t\t} else if (persons.filter(e => e.number === newNumber).length > 0) {\r\n\t\t\talert(`${newNumber} is already added to phonebook`)\r\n\t\t\tsetNewName('')\r\n\t\t\tsetNewNumber('')\r\n\t\t} else {\r\n\t\t\tpersonService.create(newObject).then(res => {\r\n\t\t\t\tsetPersons(persons.concat(res.data))\r\n\t\t\t\tsetNewName('')\r\n\t\t\t\tsetNewNumber('')\r\n\t\t\t\tsetErrorMessage(`${res.data.name} was added to phonebook`)\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetErrorMessage(null)\r\n\t\t\t\t}, 5000)\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDelete = (id, name) => {\r\n\t\tif (window.confirm(`Delete ${name}?`)) {\r\n\t\t\tpersonService\r\n\t\t\t\t.remove(id)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetPersons(persons.filter(person => person.id !== id))\r\n\t\t\t\t\tsetErrorMessage(`${name} was removed from phonebook`)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetErrorMessage(null)\r\n\t\t\t\t\t}, 5000)\r\n\t\t\t\t})\r\n\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\tsetErrorMessage(`Person ${name} was already removed from server`)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetErrorMessage(null)\r\n\t\t\t\t\t}, 5000)\r\n\t\t\t\t\tsetPersons(persons.filter(person => person.id !== id))\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleNameChange = e => {\r\n\t\tsetNewName(e.target.value)\r\n\t}\r\n\r\n\tconst handleNumberChange = e => {\r\n\t\tsetNewNumber(e.target.value)\r\n\t}\r\n\r\n\tconst numbersContent = (\r\n\t\t<span>\r\n\t\t\t<h2>Numbers</h2>\r\n\t\t\t<Persons persons={persons} filter={filter} handleDelete={handleDelete} />\r\n\t\t</span>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Phonebook</h1>\r\n\t\t\t<Notification message={errorMessage} />\r\n\t\t\t<Filter filter={filter} handleFilterChange={handleFilterChange} />\r\n\t\t\t<h2>Add a new</h2>\r\n\t\t\t<PersonForm\r\n\t\t\t\thandleSave={handleSave}\r\n\t\t\t\tnewName={newName}\r\n\t\t\t\tnewNumber={newNumber}\r\n\t\t\t\thandleNameChange={handleNameChange}\r\n\t\t\t\thandleNumberChange={handleNumberChange}\r\n\t\t\t/>\r\n\t\t\t{persons.length <= 0 ? <h2>No numbers found</h2> : numbersContent}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}